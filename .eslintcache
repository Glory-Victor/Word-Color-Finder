[{"C:\\Users\\glory\\color-palette\\src\\index.js":"1","C:\\Users\\glory\\color-palette\\src\\reportWebVitals.js":"2","C:\\Users\\glory\\color-palette\\src\\App.js":"3","C:\\Users\\glory\\color-palette\\src\\keys.js":"4","C:\\Users\\glory\\color-palette\\src\\Constants.js":"5","C:\\Users\\glory\\color-palette\\src\\Palette.js":"6"},{"size":180,"mtime":1606935178693,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":4482,"mtime":1607012001197,"results":"10","hashOfConfig":"8"},{"size":151,"mtime":1606924560772,"results":"11","hashOfConfig":"8"},{"size":137,"mtime":1606994359497,"results":"12","hashOfConfig":"8"},{"size":688,"mtime":1607012041848,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"l1liag",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\glory\\color-palette\\src\\index.js",[],["30","31"],"C:\\Users\\glory\\color-palette\\src\\reportWebVitals.js",[],["32","33"],"C:\\Users\\glory\\color-palette\\src\\App.js",["34"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SearchBar from \"material-ui-search-bar\";\nimport classNames from \"classnames\";\nimport credentials from \"./keys\";\nimport { Loader } from \"react-full-page-loader-overlay\";\nimport Palette from \"./Palette\";\nimport Masonry from \"react-masonry-css\";\nimport breakpointColumnsObj from \"./Constants\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [query, setQuery] = useState(\"\");\n  const [dataUnavailable, setDataUnavailable] = useState(false);\n  const [result, setResult] = useState(false);\n  const [colorList, setColorList] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [domColList, setDomColList] = useState([]);\n  const classes = useStyles();\n  let duplicateItem = [];\n\n  const getData = () => {\n    const imageFetchURL = `https://www.googleapis.com/customsearch/v1?key=${credentials.API_KEY}&cx=${credentials.CSR_ID}&q=${query}&searchType=image`;\n    fetch(imageFetchURL)\n      .then((response) => response.json())\n      .then(\n        (data) => {\n          if (!data) {\n            return setDataUnavailable(true);\n          }\n          const items = data.items;\n          if (!items) {\n            return setDataUnavailable(true);\n          }\n          Object.keys(items).map((val) => {\n            colorList.push(items[val].image.thumbnailLink);\n          });\n        },\n        (error) => {\n          console.log(`Error arised in home page ${error}`);\n          return setDataUnavailable(true);\n        }\n      );\n    setLoader(true);\n    setTimeout(() => {\n      setResult(true);\n      setLoader(false);\n    }, 3000);\n  };\n\n  const cancelSearch = () => {\n    setQuery(\"\");\n    setResult(false);\n    setColorList([]);\n    setDomColList([]);\n    duplicateItem = [];\n    if (dataUnavailable) setDataUnavailable(false);\n  };\n\n  const onUserInput = (value) => {\n    if (value) {\n      setQuery(value);\n    } else {\n      cancelSearch();\n    }\n  };\n\n  const colorItems =\n    domColList.length > 0 &&\n    colorList.length <= 0 &&\n    Object.keys(domColList).map((color) => {\n      const name = domColList[color].name;\n      const code = domColList[color].code;\n      if (duplicateItem.length > 0 && duplicateItem.includes(code)) {\n        return <span></span>;\n      }\n      duplicateItem.push(code);\n      return (\n        <p\n          className={classes.colorBox}\n          id={code}\n          style={{\n            backgroundColor: code,\n            color: code === \"#000000\" ? \"#fff\" : \"#000\"\n          }}\n        >\n          {name}\n        </p>\n      );\n    });\n\n  return (\n    <div className={classes.root}>\n      <title className={classes.content}>Image Search</title>\n      {/* Ref: https://www.npmjs.com/package/material-ui-search-bar */}\n      <SearchBar\n        className={classes.search}\n        value={query}\n        onChange={(value) => {\n          onUserInput(value);\n        }}\n        onRequestSearch={() => getData()}\n        onCancelSearch={() => cancelSearch()}\n      />\n\n      {loader && !dataUnavailable && <Loader show={true} />}\n\n      {dataUnavailable && (\n        <div className={classNames(classes.content, classes.dataUnavailable)}>\n          Data Unavailable\n        </div>\n      )}\n      {result &&\n        colorList.map((url, index) => {\n          return (\n            <Palette\n              key={index}\n              url={url}\n              setDomColList={setDomColList}\n              domColList={domColList}\n              colorList={colorList}\n              setColorList={setColorList}\n            />\n          );\n        })}\n\n      {result && domColList.length > 0 && colorList.length <= 0 && (\n        <Masonry\n          breakpointCols={breakpointColumnsObj}\n          className=\"my-masonry-grid\"\n          columnClassName=\"my-masonry-grid_column\"\n        >\n          {colorItems}\n        </Masonry>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: \"#000\"\n  },\n  search: {\n    margin: \"0 auto\"\n  },\n  content: {\n    textAlign: \"center\",\n    fontFamily: \"metropolis\",\n    fontSize: \"30px\",\n    color: \"#FF0000\",\n    display: \"block\",\n    marginTop: \"30px\"\n  },\n  dataUnavailable: {\n    position: \"fixed\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    marginBottom: \"20px\",\n    color: \"#39414d\"\n  },\n  colorBox: {\n    width: 200,\n    height: 200,\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"24px\"\n  }\n});\n","C:\\Users\\glory\\color-palette\\src\\keys.js",[],"C:\\Users\\glory\\color-palette\\src\\Constants.js",[],["35","36"],"C:\\Users\\glory\\color-palette\\src\\Palette.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"37","replacedBy":"41"},{"ruleId":"39","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":35,"column":40,"nodeType":"45","messageId":"46","endLine":35,"endColumn":42},{"ruleId":"37","replacedBy":"47"},{"ruleId":"39","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],["49"],["50"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["49"],["50"],"no-global-assign","no-unsafe-negation"]